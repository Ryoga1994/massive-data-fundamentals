#!/usr/bin/env python3
#
# ingest the TXT file generated by "mtr" and read it as records

import sys
import os,datetime,re
from pyspark.sql import Row

line = "2015-12-10 08:40:10 fnard:-1 fnok:-1 cark:-1 gnuck:-1"

QUAZYILX_RE = "(\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2})\s[^:]+:([-|\d]+)[^:]+:([-|\d]+)[^:]+:([-|\d]+)[^:]+:([-|\d]+)$"
quazyilx_re = re.compile(QUAZYILX_RE)

class Quazyilx():
    __slots__ = ['datetime','fnard','fnok','cark','gnuck']
    def __init__(self,line):
        # Parse line with the regular expression
        m = quazyilx_re.search(line)
        if not m:
            self.datetime = None
            self.fnard    = None
            self.fnok     = None
            self.cark     = None
            self.gnuck    = None
            return
        # Put your code here:
        self.datetime = datetime.datetime.strptime(m.group(1), "%Y-%m-%d %H:%M:%S")
        self.fnard = int(m.group(2))
        self.fnok = int(m.group(3))
        self.cark = int(m.group(4))
        self.gnuck = int(m.group(5))

    def __str__(self):
        return "{} fnard:{} fnok:{} cark:{} gnuck:{}".format(self.datetime,self.fnard,self.fnok,self.cark,self.gnuck)
    def __repr__(self):
        return "{} fnard:{} fnok:{} cark:{} gnuck:{}".format(self.datetime,self.fnard,self.fnok,self.cark,self.gnuck)

    def Row(self):
        from pyspark.sql import Row
        # You need to fill in the rest:
        return Row(datetime=self.datetime.isoformat(),fnard=self.fnard,fnok=self.fnok,cark=self.cark,gnuck=self.gnuck)


def main():
    import pandas as pd
    con = open("quazyilx0.txt")
    lines = con.readlines()

    res = pd.DataFrame(columns=['datetime','fnard','fnok','cark','gnuck'])

    for i in range(100):
        q = Quazyilx(str(lines[i].strip("\n")))
        res.loc[len(res)] = [q.datetime,q.fnard,q.fnok,q.cark,q.gnuck]

    res.to_csv("quazyilx_test.csv")

    # rows = lines.map(lambda q: Row(datetime=q.datetime.isoformat(), fnard=q.fnard, fnok=q.fnok, cark=q.cark, gnuck=q.gnuck))
